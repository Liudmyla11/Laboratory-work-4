CREATE TABLE USERSINGER (
    USER_ID INT,
    USER_NAME VARCHAR(100),
    EMAIL VARCHAR(80),
    PHONE VARCHAR(20),
    PREFERENCES VARCHAR(500),
    ALLERGIES VARCHAR(500),
    DESIRED_CALORIES INT,
    GOALS VARCHAR(500)
);

CREATE TABLE BUDGET (
    BUDGET_ID INT,
    AMOUNT NUMERIC(10, 2),
    TYPE_PERIOD VARCHAR(20),
    USER_ID INT
);

CREATE TABLE MEALPLAN (
    MEALPLAN_ID INT,
    TYPE_PERIOD VARCHAR(20),
    MEALS_COUNT INT,
    TOTAL_COST NUMERIC(10, 2),
    BUDGET_FIT VARCHAR(10),
    USER_ID INT,
    BUDGET_ID INT
);

CREATE TABLE RECIPE (
    RECIPE_ID INT,
    RECIPE_NAME VARCHAR(100),
    INSTRUCTIONS VARCHAR(2000),
    APPROX_CALORIES INT,
    APPROX_COST NUMERIC(10, 2)
);

CREATE TABLE INGREDIENT (
    INGREDIENT_ID INT,
    INGREDIENT_NAME VARCHAR(100),
    HAS_ALLERGEN CHAR(3)
);

CREATE TABLE RECIPE_INGREDIENT (
    RECIPE_ID INT,
    INGREDIENT_ID INT,
    AMOUNT NUMERIC(7, 2),
    UNIT VARCHAR(10)
);

CREATE TABLE MEALPLAN_RECIPE (
    MEALPLAN_ID INT,
    RECIPE_ID INT
);

CREATE TABLE NUTRITIONRECOMMENDATION (
    RECOMMENDATION_ID INT,
    RECOMMENDATION_TEXT VARCHAR(500),
    SAVING_SCORE NUMERIC(7, 2),
    MEALPLAN_ID INT
);

CREATE TABLE APPLICATION (
    APPLICATION_ID INT,
    PERSONAL_DATA VARCHAR(100),
    APP_CONTACT VARCHAR(80),
    CATEGORY VARCHAR(100),
    CONSENT CHAR(3),
    USER_ID INT
);

CREATE TABLE CONTESTTASK (
    TASK_ID INT,
    DESCRIPTION VARCHAR(300),
    REQUIREMENTS VARCHAR(1000),
    FILE_FORMAT CHAR(4),
    MAX_DURATION INT
);

CREATE TABLE SUBMISSION (
    SUBMISSION_ID INT,
    FILE_NAME VARCHAR(150),
    FILE_TYPE CHAR(4),
    UPLOAD_DATE DATE,
    NOTES VARCHAR(500),
    APPLICATION_ID INT,
    TASK_ID INT
);

CREATE TABLE JURYMEMBER (
    JURY_ID INT,
    JURY_NAME VARCHAR(100),
    SPECIALIZATION VARCHAR(200)
);

CREATE TABLE JURYREVIEW (
    REVIEW_ID INT,
    SCORE INT,
    COMMENTS VARCHAR(1000),
    REVIEW_SUMMARY VARCHAR(500),
    JURY_ID INT,
    SUBMISSION_ID INT
);

ALTER TABLE USERSINGER
ALTER COLUMN USER_NAME SET NOT NULL,
ALTER COLUMN EMAIL SET NOT NULL;

ALTER TABLE BUDGET
ALTER COLUMN AMOUNT SET NOT NULL,
ALTER COLUMN TYPE_PERIOD SET NOT NULL,
ALTER COLUMN USER_ID SET NOT NULL;

ALTER TABLE MEALPLAN
ALTER COLUMN TYPE_PERIOD SET NOT NULL,
ALTER COLUMN MEALS_COUNT SET NOT NULL,
ALTER COLUMN TOTAL_COST SET NOT NULL,
ALTER COLUMN BUDGET_FIT SET NOT NULL,
ALTER COLUMN USER_ID SET NOT NULL,
ALTER COLUMN BUDGET_ID SET NOT NULL;

ALTER TABLE RECIPE
ALTER COLUMN RECIPE_NAME SET NOT NULL;

ALTER TABLE INGREDIENT
ALTER COLUMN INGREDIENT_NAME SET NOT NULL;

ALTER TABLE APPLICATION
ALTER COLUMN PERSONAL_DATA SET NOT NULL,
ALTER COLUMN APP_CONTACT SET NOT NULL,
ALTER COLUMN CONSENT SET NOT NULL,
ALTER COLUMN USER_ID SET NOT NULL;

ALTER TABLE CONTESTTASK
ALTER COLUMN DESCRIPTION SET NOT NULL,
ALTER COLUMN FILE_FORMAT SET NOT NULL;

ALTER TABLE SUBMISSION
ALTER COLUMN FILE_NAME SET NOT NULL,
ALTER COLUMN FILE_TYPE SET NOT NULL,
ALTER COLUMN APPLICATION_ID SET NOT NULL,
ALTER COLUMN TASK_ID SET NOT NULL;

ALTER TABLE JURYMEMBER
ALTER COLUMN JURY_NAME SET NOT NULL;

ALTER TABLE USERSINGER ADD CONSTRAINT PK_USER PRIMARY KEY (USER_ID);
ALTER TABLE BUDGET ADD CONSTRAINT PK_BUDGET PRIMARY KEY (BUDGET_ID);
ALTER TABLE MEALPLAN ADD CONSTRAINT PK_MEALPLAN PRIMARY KEY (MEALPLAN_ID);
ALTER TABLE RECIPE ADD CONSTRAINT PK_RECIPE PRIMARY KEY (RECIPE_ID);
ALTER TABLE INGREDIENT ADD CONSTRAINT PK_INGREDIENT PRIMARY KEY (INGREDIENT_ID);
ALTER TABLE RECIPE_INGREDIENT ADD CONSTRAINT PK_RECIPE_INGREDIENT PRIMARY KEY (
    RECIPE_ID, INGREDIENT_ID
);
ALTER TABLE MEALPLAN_RECIPE ADD CONSTRAINT PK_MEALPLAN_RECIPE PRIMARY KEY (
    MEALPLAN_ID, RECIPE_ID
);
ALTER TABLE NUTRITIONRECOMMENDATION ADD CONSTRAINT PK_NUTRITION PRIMARY KEY (
    RECOMMENDATION_ID
);
ALTER TABLE APPLICATION ADD CONSTRAINT PK_APPLICATION PRIMARY KEY (
    APPLICATION_ID
);
ALTER TABLE CONTESTTASK ADD CONSTRAINT PK_TASK PRIMARY KEY (TASK_ID);
ALTER TABLE SUBMISSION ADD CONSTRAINT PK_SUBMISSION PRIMARY KEY (SUBMISSION_ID);
ALTER TABLE JURYMEMBER ADD CONSTRAINT PK_JURY PRIMARY KEY (JURY_ID);
ALTER TABLE JURYREVIEW ADD CONSTRAINT PK_JURYREVIEW PRIMARY KEY (REVIEW_ID);

ALTER TABLE BUDGET
ADD CONSTRAINT FK_BUDGET_USER FOREIGN KEY (USER_ID) REFERENCES USERSINGER (
    USER_ID
);

ALTER TABLE MEALPLAN
ADD CONSTRAINT FK_MEALPLAN_USER FOREIGN KEY (USER_ID) REFERENCES USERSINGER (
    USER_ID
),
ADD CONSTRAINT FK_MEALPLAN_BUDGET FOREIGN KEY (BUDGET_ID) REFERENCES BUDGET (
    BUDGET_ID
);

ALTER TABLE RECIPE_INGREDIENT
ADD CONSTRAINT FK_RI_RECIPE FOREIGN KEY (RECIPE_ID) REFERENCES RECIPE (
    RECIPE_ID
),
ADD CONSTRAINT FK_RI_INGREDIENT FOREIGN KEY (
    INGREDIENT_ID
) REFERENCES INGREDIENT (INGREDIENT_ID);

ALTER TABLE MEALPLAN_RECIPE
ADD CONSTRAINT FK_MPR_MEALPLAN FOREIGN KEY (MEALPLAN_ID) REFERENCES MEALPLAN (
    MEALPLAN_ID
),
ADD CONSTRAINT FK_MPR_RECIPE FOREIGN KEY (RECIPE_ID) REFERENCES RECIPE (
    RECIPE_ID
);

ALTER TABLE NUTRITIONRECOMMENDATION
ADD CONSTRAINT FK_NR_MEALPLAN FOREIGN KEY (MEALPLAN_ID) REFERENCES MEALPLAN (
    MEALPLAN_ID
);

ALTER TABLE APPLICATION
ADD CONSTRAINT FK_APP_USER FOREIGN KEY (USER_ID) REFERENCES USERSINGER (
    USER_ID
);

ALTER TABLE SUBMISSION
ADD CONSTRAINT FK_SUB_APPLICATION FOREIGN KEY (
    APPLICATION_ID
) REFERENCES APPLICATION (APPLICATION_ID),
ADD CONSTRAINT FK_SUB_TASK FOREIGN KEY (TASK_ID) REFERENCES CONTESTTASK (
    TASK_ID
);

ALTER TABLE JURYREVIEW
ADD CONSTRAINT FK_JR_JURYMEMBER FOREIGN KEY (JURY_ID) REFERENCES JURYMEMBER (
    JURY_ID
),
ADD CONSTRAINT FK_JR_SUBMISSION FOREIGN KEY (
    SUBMISSION_ID
) REFERENCES SUBMISSION (SUBMISSION_ID);

ALTER TABLE USERSINGER
ADD CONSTRAINT CHK_EMAIL CHECK (
    EMAIL ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
),
ADD CONSTRAINT CHK_PHONE CHECK (PHONE ~ '^\+380\d{9}$'),
ADD CONSTRAINT CHK_DESIRED_CALORIES CHECK (DESIRED_CALORIES > 0);

ALTER TABLE BUDGET
ADD CONSTRAINT CHK_BUDGET_AMOUNT CHECK (AMOUNT > 0),
ADD CONSTRAINT CHK_BUDGET_TYPE_PERIOD CHECK (
    TYPE_PERIOD IN ('щоденний', 'щотижневий')
);

ALTER TABLE MEALPLAN
ADD CONSTRAINT CHK_MEALPLAN_TYPE_PERIOD CHECK (
    TYPE_PERIOD IN ('щоденний', 'щотижневий', 'щомісячний')
),
ADD CONSTRAINT CHK_MEALS_COUNT CHECK (MEALS_COUNT > 0),
ADD CONSTRAINT CHK_TOTAL_COST CHECK (TOTAL_COST >= 0),
ADD CONSTRAINT CHK_BUDGET_FIT CHECK (BUDGET_FIT IN ('норма', 'перевищує'));

ALTER TABLE RECIPE
ADD CONSTRAINT CHK_APPROX_CALORIES CHECK (APPROX_CALORIES > 0),
ADD CONSTRAINT CHK_APPROX_COST CHECK (APPROX_COST >= 0);

ALTER TABLE INGREDIENT
ADD CONSTRAINT CHK_HAS_ALLERGEN CHECK (HAS_ALLERGEN IN ('так', 'ні'));

ALTER TABLE RECIPE_INGREDIENT
ADD CONSTRAINT CHK_AMOUNT CHECK (AMOUNT > 0);

ALTER TABLE NUTRITIONRECOMMENDATION
ADD CONSTRAINT CHK_SAVING_SCORE CHECK (SAVING_SCORE >= 0);

ALTER TABLE APPLICATION
ADD CONSTRAINT CHK_CONTACT CHECK (
    APP_CONTACT ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'
),
ADD CONSTRAINT CHK_CONSENT CHECK (CONSENT IN ('так', 'ні'));

ALTER TABLE CONTESTTASK
ADD CONSTRAINT CHK_FILE_FORMAT CHECK (
    FILE_FORMAT IN ('mp3', 'mp4', 'pdf', 'jpg')
),
ADD CONSTRAINT CHK_MAX_DURATION CHECK (MAX_DURATION > 0);

ALTER TABLE SUBMISSION
ADD CONSTRAINT CHK_FILE_TYPE CHECK (FILE_TYPE IN ('mp3', 'mp4', 'pdf', 'jpg'));

ALTER TABLE JURYREVIEW
ADD CONSTRAINT CHK_SCORE CHECK (SCORE BETWEEN 0 AND 100);
